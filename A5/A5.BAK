;Daniel Artuso
;dartu261@mtroyal.a
;COMP 2655
;Due Nov 21
;FILE:	A5.S
;INTRUCTOR: Paul Pospisil
;
;Purpose: Demonstration program for a movie database, 
;supports listing database, finding entries by year, and deleteing entries.

;Details:
;Input: loads from file "movie_db.dat - from the filename variable
;	User inputs menu choices, years they want to see and entry to delete
;Output: Prints info to screen, saves final database to movie.out from outfile var  
;Formula: Horner rule for year selection and delete selection, div by 10 and reversing sting for year
;Quirks: Excellent code?

;Status: All operations are believed to be functional
;There is a minor error when calling the exit function, as it prints e2178
;register table


MOVIE	equ	62
TITLE	equ	0
YEAR	equ	52
TIME	equ	54
RATING	equ	56

ARRAY	equ	15
MAXSIZE	equ	MOVIE*ARRAY
RECORD	equ	8

NULL	equ	0
CR	equ	13
LF	equ	10

	xref	read_file
	xref	write_file
	xref	read_char
	xref	write_char
	xref	exit

start:	move.l	#$12345678,-4(a7)
	move.l	#MAXSIZE,-(sp)
	pea	charsreadin
	pea	database
	pea	filename
	jsr	read_file
	add.l	#16,sp
	move.l	(charsreadin),d2
	divu.w	#MOVIE,d2
	move.b	d2,numberitem
readopt:
	jsr escape_screen
	pea	menu
	jsr	print_string
	add.l	#4,sp
	move.b 	#00,-(sp)
	jsr	read_char
	move.b	(sp)+,d0
	jsr	print_crlf

op1:	cmp.b   #'1',d0
	bne	op2
	pea	database
	move.b	(numberitem),-(sp)
	jsr	list
	add.l	#6,sp
	jsr	print_crlf
	jsr	sys_wait
	bra	readopt
op2:
	cmp.b   #'2',d0
	bne	op3
	pea	database
	move.b	(numberitem),-(sp)
	jsr	listbyyear
	add.l	#6,sp
	jsr	print_crlf
	jsr	sys_wait
	bra	readopt
op3:
	cmp.b   #'3',d0
	bne	op4
	pea	database
	move.l	(charsreadin),-(sp)
	move.l	#0,-(sp)
	move.w	#0,-(sp)	
	jsr	delete
	move.l	(sp)+,d0
	move.l	d0,charsreadin
	move.b	(sp)+,d0
	move.b	d0,numberitem
	add.l	#8,sp
	jsr	print_crlf
	jsr	sys_wait
	bra	readopt
op4:
	cmp.b   #'4',d0
	bne	readopt
	move.l	charsreadin,-(sp)
	pea	database
	pea	outfile
	jsr	quit
	add.l	#12,sp
	jsr	exit
	
;void	list (database, numberitem)
list:	link	a6,#0
	movem.l	d0-4/a2,-(sp)
	
	move.b	RECORD(a6),d2
	movea.l	10(a6),a2
	clr.l 	d0
	clr.l   d1
	clr.l	d3
nxtent	add.b	#1,d1
	move.b 	#'#',d0
	move.b	d0,-(sp)
	jsr	write_char
	add.l	#2,sp

	move.b 	d1,d0
	move.w	d0,-(sp)
	jsr	print_number
	add.l	#2,sp
	jsr	print_crlf

	pea	TITLE(a2,d3.l)
	jsr	print_entry
	add.l	#4,sp
	add.w	#MOVIE,d3
	clr.l	d4
	move.b	d1,d4
	divu.w	#3,d4
	swap	d4
	cmp.b	#0,d4
	bne	skip
	jsr	sys_wait
skip	cmp.b	d1,d2
	bne	nxtent
	movem.l	(sp)+,d0-4/a2
	unlk	a6
	rts

;void listbyyear (database, numberitem)
listbyyear:
	link	a6,#0
	movem.l d0-4/a2-3,-(sp)
	movea.l	10(a6),a2
	;movea.l	RECORD(a6),a2

	pea	listbyyrmenu
	jsr	print_string
	add.l	#4,sp

	clr.l	d0
	move.l	#3,d2
yrch:
	move.b #0,-(sp)
	jsr	read_char
	move.b	(sp)+,d0
	sub.b	#'0',d0
	move.b	d0,-(a2)
	add.l	#2,sp
	tst.b	d2
	dbeq	d2,yrch
	clr.l	d2

realyr:	move.b	(a2)+,d0
	move.b	(a2)+,d1
	mulu	#10,d1
	move.b	(a2)+,d2
	mulu	#100,d2
	move.b	(a2)+,d3
	mulu	#1000,d3
	add.w	d1,d0
	add.w	d2,d0
	add.w	d3,d0
	jsr	print_crlf
	clr.l	d1
	clr.l	d2
	clr.l	d3
	move.b	RECORD(a2),d3

nxtyear:
	add.b	#1,d1
	cmp.w	YEAR(a2,d4.l),d0
	bne	count
	pea	TITLE(a2,d4.l)
	jsr	print_entry
	add.l	#4,sp
count:	add.l	#MOVIE,d4
	cmp.b	d1,d3
	bne	nxtyear

	movem.l (sp)+,d0-4/a2-3
	unlk	a6
	rts

;void	delete(charreadin, database)
delete:
	link	a6,#0
	movem.l d0-4/a2-5,-(sp)
	move.l	14(a6),d4
	movea.l	18(a6),a2
	move.l	#1,d2

	pea	deletemenu
	jsr	print_string
	add.l	#4,sp
nxselec:
	move.b #0,-(sp)
	jsr	read_char
	move.b	(sp)+,d0
	sub.b	#'0',d0
	move.b	d0,-(a5)
	tst.b	d2
	dbeq	d2,nxselec
	clr.l	d2
	move.b	(a5)+,d0
	move.b	(a5)+,d1
	mulu	#10,d1
	add.b	d0,d1
	sub.b	#1,d1	;since array starts at 0

	cmp.b	#0,d1
	blt	endrm

	move.w	d4,d3
	move.w	d1,d2
	mulu.w	#MOVIE,d1
	add.w	#1,d2
	mulu.w	#MOVIE,d2
	
	cmp.w	d4,d1
	bhi	endrm
	
	sub.w	d1,d4
	sub.w	#MOVIE,d3
	move.l	d3,8(a6)
	move.l	d3,d0
	divu.w	#MOVIE,d0
	move.b	d0,12(a6)	

	;d1 = start of element for deletion
	;d2 = start of next element
	;d3 = number of char in database
	;d4 = number of char in database - starting pos of element
	

	lea	TITLE(a2,d1),a3	;address register starting from element to be deleted
	lea	TITLE(a2,d2),a4	;address register starting from next element


lp	move.b	(a4)+,(a3)+
	tst.w	d4
	dbeq	d4,lp
endrm	nop

	movem.l (sp)+,d0-4/a2-5
	unlk	a6
	rts


quit:
	;print database to output file
	link	a6,#0
	movem.l	d0,-(sp)

	move.b	#0,-(sp)
	;move.l	charsreadin,-(sp)
	;pea	database
	;pea	outfile
	move.l	16(a6),-(sp)
	move.l	12(a6),-(sp)
	move.l	RECORD(a6),-(sp)
	jsr	write_file
	move.b	(sp)+,d0
	add.l	#12,sp
	
	movem.l	(sp)+,d0
	unlk	a6
	rts

;helpers subroutines
print_entry:
	;print title
	;print year
	;print time
	;print rating
	link	a6,#0
	movem.l	d0/a2,-(sp)

	movea.l	RECORD(a6),a2

	pea	TITLE(a2)
	jsr	print_string
	addq.l	#4,sp

	move.w	YEAR(a2),d0
	move.w	d0,-(sp)
	jsr	print_number
	addq.l	#2,sp
	jsr	print_crlf

	move.w	TIME(a2),d0
	rol.w	#8,d0
	move.w	d0,-(sp)
	jsr	print_number
	addq.l	#2,sp
	jsr	print_crlf

	pea	RATING(a2)
	jsr	print_string
	addq.l	#4,sp
	jsr	print_crlf

	;add sys_wat

	movem.l	(sp)+,d0/a2
	unlk	a6
	rts

print_number:
	link 	a6,#0
	movem.l	d0-1/a2/a4,-(sp)
	move.w	RECORD(a6),d1
nextyr:	divu.w	#10,d1
	swap	d1
	move.b	d1,d0
	;print number
	add.b	#'0',d0
	move.b	d0,-(a4)
	clr.w	d1
	swap	d1
	tst.w	d1
	bne	nextyr
rvr:	tst.b	(a4)
	beq	lstdgt
	move.b 	(a4)+,d0
	move.b	d0,-(sp)
	jsr	write_char
	add.l	#2,sp
	bra	rvr
lstdgt:
	movem.l	(sp)+,d0-1/a2/a4
	unlk	a6
	rts

print_string:
	;print each character until null terminator
	link	a6,#0
	movem.l	d0/a2,-(sp)
	movea.l	RECORD(a6),a2
nextchr move.b	(a2)+,d0
	cmp.b	#NULL,d0
	beq	donestr
	move.b	d0,-(sp)
	jsr	write_char
	add.l	#2,sp
	bra	nextchr
donestr	jsr	print_crlf
	movem.l	(sp)+,d0/a2
	unlk	a6
	rts


print_crlf:
	link	a6,#0
	move.b	#CR,-(sp)
	jsr	write_char
	add.l	#2,sp

	move.b	#LF,-(sp)
	jsr	write_char
	add.l	#2,sp
	unlk	a6
	rts

escape_screen:
	link	a6,#0
	pea	escape
	move.w	#9,-(a7)
	trap	#1
	addq.l	#6,a7
	unlk	a6
	rts

sys_wait:
	link	a6,#0
	move.l	d0,-(sp)
	pea	PressAnyKey
	jsr	print_string
	add.l	#4,sp

	move.b	#0,-(sp)
	jsr	read_char
	move.b	(sp)+,d0

	move.l	(sp)+,d0
	unlk	a6
	rts


PressAnyKey:	dc.b	"Press any key to continue",CR,LF,NULL
menu:		dc.b	"1 - List",CR,LF,"2 - List by Year",CR,LF,"3 - Delete",CR,LF,"4 - Quit",CR,LF,"Enter Key:",NULL
listbyyrmenu:	dc.b	"Enter year to filter by: ",CR,LF,NULL
deletemenu:	dc.b	"Enter database item to delete (must be exactly two digits ex 02 or 11): ",CR,LF,NULL
filename:	dc.b	"movie_db.dat",NULL
;filename	dc.b	"movie.out",NULL
outfile:	dc.b	"movie.out",NULL

escape:		dc.b	27,"E",NULL


charsreadin:	ds.l	1
database:	ds.l	MAXSIZE
numberitem:	ds.b	1